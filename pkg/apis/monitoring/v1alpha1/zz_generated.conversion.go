// +build !ignore_autogenerated

/*
Copyright 2018 The Prohori Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1alpha1

import (
	monitoring "github.com/prohori/prohori/pkg/apis/monitoring"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	unsafe "unsafe"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_Alert_To_monitoring_Alert,
		Convert_monitoring_Alert_To_v1alpha1_Alert,
		Convert_v1alpha1_AlertList_To_monitoring_AlertList,
		Convert_monitoring_AlertList_To_v1alpha1_AlertList,
		Convert_v1alpha1_AlertSpec_To_monitoring_AlertSpec,
		Convert_monitoring_AlertSpec_To_v1alpha1_AlertSpec,
		Convert_v1alpha1_AlertStatus_To_monitoring_AlertStatus,
		Convert_monitoring_AlertStatus_To_v1alpha1_AlertStatus,
		Convert_v1alpha1_AlertStatusStrategy_To_monitoring_AlertStatusStrategy,
		Convert_monitoring_AlertStatusStrategy_To_v1alpha1_AlertStatusStrategy,
		Convert_v1alpha1_AlertStrategy_To_monitoring_AlertStrategy,
		Convert_monitoring_AlertStrategy_To_v1alpha1_AlertStrategy,
		Convert_v1alpha1_CommandPlugin_To_monitoring_CommandPlugin,
		Convert_monitoring_CommandPlugin_To_v1alpha1_CommandPlugin,
		Convert_v1alpha1_NotificationReceiver_To_monitoring_NotificationReceiver,
		Convert_monitoring_NotificationReceiver_To_v1alpha1_NotificationReceiver,
		Convert_v1alpha1_ObjectSelector_To_monitoring_ObjectSelector,
		Convert_monitoring_ObjectSelector_To_v1alpha1_ObjectSelector,
	)
}

func autoConvert_v1alpha1_Alert_To_monitoring_Alert(in *Alert, out *monitoring.Alert, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_AlertSpec_To_monitoring_AlertSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_AlertStatus_To_monitoring_AlertStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Alert_To_monitoring_Alert is an autogenerated conversion function.
func Convert_v1alpha1_Alert_To_monitoring_Alert(in *Alert, out *monitoring.Alert, s conversion.Scope) error {
	return autoConvert_v1alpha1_Alert_To_monitoring_Alert(in, out, s)
}

func autoConvert_monitoring_Alert_To_v1alpha1_Alert(in *monitoring.Alert, out *Alert, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_monitoring_AlertSpec_To_v1alpha1_AlertSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_monitoring_AlertStatus_To_v1alpha1_AlertStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_monitoring_Alert_To_v1alpha1_Alert is an autogenerated conversion function.
func Convert_monitoring_Alert_To_v1alpha1_Alert(in *monitoring.Alert, out *Alert, s conversion.Scope) error {
	return autoConvert_monitoring_Alert_To_v1alpha1_Alert(in, out, s)
}

func autoConvert_v1alpha1_AlertList_To_monitoring_AlertList(in *AlertList, out *monitoring.AlertList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]monitoring.Alert, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Alert_To_monitoring_Alert(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_AlertList_To_monitoring_AlertList is an autogenerated conversion function.
func Convert_v1alpha1_AlertList_To_monitoring_AlertList(in *AlertList, out *monitoring.AlertList, s conversion.Scope) error {
	return autoConvert_v1alpha1_AlertList_To_monitoring_AlertList(in, out, s)
}

func autoConvert_monitoring_AlertList_To_v1alpha1_AlertList(in *monitoring.AlertList, out *AlertList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Alert, len(*in))
		for i := range *in {
			if err := Convert_monitoring_Alert_To_v1alpha1_Alert(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_monitoring_AlertList_To_v1alpha1_AlertList is an autogenerated conversion function.
func Convert_monitoring_AlertList_To_v1alpha1_AlertList(in *monitoring.AlertList, out *AlertList, s conversion.Scope) error {
	return autoConvert_monitoring_AlertList_To_v1alpha1_AlertList(in, out, s)
}

func autoConvert_v1alpha1_AlertSpec_To_monitoring_AlertSpec(in *AlertSpec, out *monitoring.AlertSpec, s conversion.Scope) error {
	// WARNING: in.Type requires manual conversion: inconvertible types (github.com/prohori/prohori/pkg/apis/monitoring/v1alpha1.AlertType vs invalid type)
	out.Command = in.Command
	out.Flags = *(*map[string]string)(unsafe.Pointer(&in.Flags))
	out.Selector = (*monitoring.ObjectSelector)(unsafe.Pointer(in.Selector))
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = new(monitoring.CommandPlugin)
		if err := Convert_v1alpha1_CommandPlugin_To_monitoring_CommandPlugin(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Plugin = nil
	}
	out.CheckInterval = in.CheckInterval
	out.AlertInterval = in.AlertInterval
	out.NotifierSecretName = in.NotifierSecretName
	if in.Receivers != nil {
		in, out := &in.Receivers, &out.Receivers
		*out = make([]monitoring.NotificationReceiver, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_NotificationReceiver_To_monitoring_NotificationReceiver(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Receivers = nil
	}
	return nil
}

func Convert_v1alpha1_AlertSpec_To_monitoring_AlertSpec(in *AlertSpec, out *monitoring.AlertSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_AlertSpec_To_monitoring_AlertSpec(in, out, s)
}

func autoConvert_monitoring_AlertSpec_To_v1alpha1_AlertSpec(in *monitoring.AlertSpec, out *AlertSpec, s conversion.Scope) error {
	// WARNING: in.Type requires manual conversion: inconvertible types (invalid type vs github.com/prohori/prohori/pkg/apis/monitoring/v1alpha1.AlertType)
	out.Command = in.Command
	out.Flags = *(*map[string]string)(unsafe.Pointer(&in.Flags))
	out.Selector = (*ObjectSelector)(unsafe.Pointer(in.Selector))
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = new(CommandPlugin)
		if err := Convert_monitoring_CommandPlugin_To_v1alpha1_CommandPlugin(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Plugin = nil
	}
	out.CheckInterval = in.CheckInterval
	out.AlertInterval = in.AlertInterval
	out.NotifierSecretName = in.NotifierSecretName
	if in.Receivers != nil {
		in, out := &in.Receivers, &out.Receivers
		*out = make([]NotificationReceiver, len(*in))
		for i := range *in {
			if err := Convert_monitoring_NotificationReceiver_To_v1alpha1_NotificationReceiver(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Receivers = nil
	}
	return nil
}

func Convert_monitoring_AlertSpec_To_v1alpha1_AlertSpec(in *monitoring.AlertSpec, out *AlertSpec, s conversion.Scope) error {
	return autoConvert_monitoring_AlertSpec_To_v1alpha1_AlertSpec(in, out, s)
}

func autoConvert_v1alpha1_AlertStatus_To_monitoring_AlertStatus(in *AlertStatus, out *monitoring.AlertStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_AlertStatus_To_monitoring_AlertStatus is an autogenerated conversion function.
func Convert_v1alpha1_AlertStatus_To_monitoring_AlertStatus(in *AlertStatus, out *monitoring.AlertStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_AlertStatus_To_monitoring_AlertStatus(in, out, s)
}

func autoConvert_monitoring_AlertStatus_To_v1alpha1_AlertStatus(in *monitoring.AlertStatus, out *AlertStatus, s conversion.Scope) error {
	return nil
}

// Convert_monitoring_AlertStatus_To_v1alpha1_AlertStatus is an autogenerated conversion function.
func Convert_monitoring_AlertStatus_To_v1alpha1_AlertStatus(in *monitoring.AlertStatus, out *AlertStatus, s conversion.Scope) error {
	return autoConvert_monitoring_AlertStatus_To_v1alpha1_AlertStatus(in, out, s)
}

func autoConvert_v1alpha1_AlertStatusStrategy_To_monitoring_AlertStatusStrategy(in *AlertStatusStrategy, out *monitoring.AlertStatusStrategy, s conversion.Scope) error {
	out.DefaultStatusStorageStrategy = in.DefaultStatusStorageStrategy
	return nil
}

// Convert_v1alpha1_AlertStatusStrategy_To_monitoring_AlertStatusStrategy is an autogenerated conversion function.
func Convert_v1alpha1_AlertStatusStrategy_To_monitoring_AlertStatusStrategy(in *AlertStatusStrategy, out *monitoring.AlertStatusStrategy, s conversion.Scope) error {
	return autoConvert_v1alpha1_AlertStatusStrategy_To_monitoring_AlertStatusStrategy(in, out, s)
}

func autoConvert_monitoring_AlertStatusStrategy_To_v1alpha1_AlertStatusStrategy(in *monitoring.AlertStatusStrategy, out *AlertStatusStrategy, s conversion.Scope) error {
	out.DefaultStatusStorageStrategy = in.DefaultStatusStorageStrategy
	return nil
}

// Convert_monitoring_AlertStatusStrategy_To_v1alpha1_AlertStatusStrategy is an autogenerated conversion function.
func Convert_monitoring_AlertStatusStrategy_To_v1alpha1_AlertStatusStrategy(in *monitoring.AlertStatusStrategy, out *AlertStatusStrategy, s conversion.Scope) error {
	return autoConvert_monitoring_AlertStatusStrategy_To_v1alpha1_AlertStatusStrategy(in, out, s)
}

func autoConvert_v1alpha1_AlertStrategy_To_monitoring_AlertStrategy(in *AlertStrategy, out *monitoring.AlertStrategy, s conversion.Scope) error {
	out.DefaultStorageStrategy = in.DefaultStorageStrategy
	return nil
}

// Convert_v1alpha1_AlertStrategy_To_monitoring_AlertStrategy is an autogenerated conversion function.
func Convert_v1alpha1_AlertStrategy_To_monitoring_AlertStrategy(in *AlertStrategy, out *monitoring.AlertStrategy, s conversion.Scope) error {
	return autoConvert_v1alpha1_AlertStrategy_To_monitoring_AlertStrategy(in, out, s)
}

func autoConvert_monitoring_AlertStrategy_To_v1alpha1_AlertStrategy(in *monitoring.AlertStrategy, out *AlertStrategy, s conversion.Scope) error {
	out.DefaultStorageStrategy = in.DefaultStorageStrategy
	return nil
}

// Convert_monitoring_AlertStrategy_To_v1alpha1_AlertStrategy is an autogenerated conversion function.
func Convert_monitoring_AlertStrategy_To_v1alpha1_AlertStrategy(in *monitoring.AlertStrategy, out *AlertStrategy, s conversion.Scope) error {
	return autoConvert_monitoring_AlertStrategy_To_v1alpha1_AlertStrategy(in, out, s)
}

func autoConvert_v1alpha1_CommandPlugin_To_monitoring_CommandPlugin(in *CommandPlugin, out *monitoring.CommandPlugin, s conversion.Scope) error {
	out.PluginPullPolicy = monitoring.PullPolicy(in.PluginPullPolicy)
	out.Binary = in.Binary
	return nil
}

func Convert_v1alpha1_CommandPlugin_To_monitoring_CommandPlugin(in *CommandPlugin, out *monitoring.CommandPlugin, s conversion.Scope) error {
	return autoConvert_v1alpha1_CommandPlugin_To_monitoring_CommandPlugin(in, out, s)
}

func autoConvert_monitoring_CommandPlugin_To_v1alpha1_CommandPlugin(in *monitoring.CommandPlugin, out *CommandPlugin, s conversion.Scope) error {
	out.PluginPullPolicy = PullPolicy(in.PluginPullPolicy)
	out.Binary = in.Binary
	return nil
}

func Convert_monitoring_CommandPlugin_To_v1alpha1_CommandPlugin(in *monitoring.CommandPlugin, out *CommandPlugin, s conversion.Scope) error {
	return autoConvert_monitoring_CommandPlugin_To_v1alpha1_CommandPlugin(in, out, s)
}

func autoConvert_v1alpha1_NotificationReceiver_To_monitoring_NotificationReceiver(in *NotificationReceiver, out *monitoring.NotificationReceiver, s conversion.Scope) error {
	out.State = monitoring.ProblemState(in.State)
	out.To = *(*[]string)(unsafe.Pointer(&in.To))
	out.Notifier = in.Notifier
	return nil
}

func Convert_v1alpha1_NotificationReceiver_To_monitoring_NotificationReceiver(in *NotificationReceiver, out *monitoring.NotificationReceiver, s conversion.Scope) error {
	return autoConvert_v1alpha1_NotificationReceiver_To_monitoring_NotificationReceiver(in, out, s)
}

func autoConvert_monitoring_NotificationReceiver_To_v1alpha1_NotificationReceiver(in *monitoring.NotificationReceiver, out *NotificationReceiver, s conversion.Scope) error {
	out.State = ProblemState(in.State)
	out.To = *(*[]string)(unsafe.Pointer(&in.To))
	out.Notifier = in.Notifier
	return nil
}

func Convert_monitoring_NotificationReceiver_To_v1alpha1_NotificationReceiver(in *monitoring.NotificationReceiver, out *NotificationReceiver, s conversion.Scope) error {
	return autoConvert_monitoring_NotificationReceiver_To_v1alpha1_NotificationReceiver(in, out, s)
}

func autoConvert_v1alpha1_ObjectSelector_To_monitoring_ObjectSelector(in *ObjectSelector, out *monitoring.ObjectSelector, s conversion.Scope) error {
	out.Name = in.Name
	out.Namespace = in.Namespace
	out.MatchLabels = *(*map[string]string)(unsafe.Pointer(&in.MatchLabels))
	return nil
}

// Convert_v1alpha1_ObjectSelector_To_monitoring_ObjectSelector is an autogenerated conversion function.
func Convert_v1alpha1_ObjectSelector_To_monitoring_ObjectSelector(in *ObjectSelector, out *monitoring.ObjectSelector, s conversion.Scope) error {
	return autoConvert_v1alpha1_ObjectSelector_To_monitoring_ObjectSelector(in, out, s)
}

func autoConvert_monitoring_ObjectSelector_To_v1alpha1_ObjectSelector(in *monitoring.ObjectSelector, out *ObjectSelector, s conversion.Scope) error {
	out.Name = in.Name
	out.Namespace = in.Namespace
	out.MatchLabels = *(*map[string]string)(unsafe.Pointer(&in.MatchLabels))
	return nil
}

// Convert_monitoring_ObjectSelector_To_v1alpha1_ObjectSelector is an autogenerated conversion function.
func Convert_monitoring_ObjectSelector_To_v1alpha1_ObjectSelector(in *monitoring.ObjectSelector, out *ObjectSelector, s conversion.Scope) error {
	return autoConvert_monitoring_ObjectSelector_To_v1alpha1_ObjectSelector(in, out, s)
}
